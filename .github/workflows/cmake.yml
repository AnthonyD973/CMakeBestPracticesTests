name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#choosing-github-hosted-runners
        runner-id: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{matrix.runner-id}}

    steps:
    - name: Ubuntu install ninja
      working-directory: ${{github.workspace}}
      if: matrix.runner-id == 'ubuntu-latest'
      run: |
        wget https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-linux.zip && \
        unzip ninja-linux.zip && rm ninja-linux.zip && \
        echo "${{github.workspace}}" >> $GITHUB_PATH

    - name: Windows install ninja
      working-directory: ${{github.workspace}}
      if: matrix.runner-id == 'windows-latest'
      run: |
        (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','${{github.workspace}}\ninja-win.zip');
        tar -xf ninja-win.zip;
        echo "${{github.workspace}}" >> $GITHUB_PATH

    - name: MacOS install ninja
      working-directory: ${{github.workspace}}
      if: matrix.runner-id == 'macos-latest'
      run: |
        wget https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-linux.zip && \
        unzip ninja-linux.zip && rm ninja-linux.zip && \
        echo "${{github.workspace}}" >> $GITHUB_PATH

    - uses: actions/checkout@v3
      with:
        # The actions/checkout@v3 action clones into
        # "${{github.workspace}}" by default, which wipes the ninja executable we just extracted.
        path: repo

    - name: SilClangFormat/Workflow
      working-directory: ${{github.workspace}}/repo/SilClangFormat
      run: cmake --workflow --preset ninja

    - name: SilClangFormat/Install
      working-directory: ${{github.workspace}}/repo/SilClangFormat/build
      run: cmake --install .

    - name: lib1/Workflow
      working-directory: ${{github.workspace}}/repo/lib1
      run: cmake --workflow --preset ninja-release-static

    - name: lib1/Install
      working-directory: ${{github.workspace}}/repo/lib1/build
      run: cmake --install .

    - name: exe-and-lib2/Workflow
      working-directory: ${{github.workspace}}/repo/exe-and-lib2
      run: cmake --workflow --preset ninja-release-shared

    - name: exe-and-lib2/Install
      working-directory: ${{github.workspace}}/repo/exe-and-lib2/build
      run: cmake --install .

    - name: Run exe
      run: ${{github.workspace}}/repo/install/bin/exe

